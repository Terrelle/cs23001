// bigint Test Program
//
// Tests:  int constructor, uses ==
//
// NEED TO IMPLEMENT
//
#include <iostream>
#include <cassert>
#include "bigint.hpp"


//===========================================================================
int main () {
    {

        // VERY INCOMPLETE set of tests.


        //------------------------------------------------------
        // Setup fixture
        bigint left(0);
        bigint right(0);
        bigint result;

        // Test 
        result = left + right;

        // Verify
        assert(left   == 0);
        assert(right  == 0);
        assert(result == 0);
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(1);
      bigint right(0);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == 1);
      assert(right  == 0);
      assert(result == 1);
    }

    
    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(1);
      bigint right(1);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == 1);
      assert(right  == 1);
      assert(result == 2);
    }

    // 1
    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(9);
      bigint right(8);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == 9);
      assert(right  == 8);
      assert(result == 17);
    }

    // 2
    {
      //------------------------------------------------------
      // Setup fixture
      bigint left("9000000000");
      bigint right(90);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == "9000000000");
      assert(right  == 90);
      assert(result == "9000000090");
    }

    //3
    {
      //------------------------------------------------------
      // Setup fixture
      bigint left(286);
      bigint right(23);
      bigint result;

      // Test
      result = left + right;

      // Verify
      assert(left   == 286);
      assert(right  == 23);
      assert(result == 309);
    }

    assert(1 == 2); //WRONG. This will fail, of course.
                    //You need to add more test cases here. Remove this assert.

    
    //Add test cases as needed.
    
    
    std::cout << "Done with testing addition." << std::endl;
    return 0;
}

